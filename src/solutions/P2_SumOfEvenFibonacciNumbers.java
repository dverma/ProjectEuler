/**
 * 
 */
package solutions;

import java.util.Scanner;

/**
 * @author Dhawal.Verma
 * 
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
 * By starting with 1 and 2, the first 10 terms will be:
 * 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * 
 * By considering the terms in the Fibonacci sequence 
 * whose values do not exceed n, find the sum of the even-valued terms.
 * 
 * --------------------------------------------------------------------------------------
 * 
 * Upon observation we find that every 3rd term in the sequence is an even no
 * 2, 8, 34, 144
 *  F(3) = 4F(2) + F(1)
 *  F(4) = 4F(3) + F(2) = 4x34 + 8
 *
 */
public class P2_SumOfEvenFibonacciNumbers
{
	public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int t = in.nextInt();
        for(int a0 = 0; a0 < t; a0++){
            long n = in.nextLong();
            if(n<34 && n>8)
            	System.out.println(10);
            else if(n<8 && n >2)
            	System.out.println(2);
            else
            	System.out.println(FibonacciEven(n,8,2,10));
        }
    }
	/**
	 * 
	 * @param n
	 * @param a : n-1
	 * @param b : n-2
	 * @return
	 */
	static long FibonacciEven(long n, long a, long b, long sum )
	{
		long c = 4*a + b;
		if(c<n)
			return FibonacciEven(n, c, a, sum+c);
		else
			return sum;
	}
}
